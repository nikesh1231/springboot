name: JAVA SPRING BOOT APPLICATION CI/CD Pipeline
on:
  push:
    branches:
      - main:
env:
  PROJECT_NAME: "evbackend"

jobs:
  Build:
    name: Spring boot application Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
    
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build 
        run: mvn -B package --file pom.xml

      - name: MySql Server
      - uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3800 # Optional, default value is 3306. The port of host
          container port: 3307 # Optional, default value is 3306. The port of container
          character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
          collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: ${{ env.PROJECT_NAME }} # Optional, default value is "test". The specified database which will be create
          mysql root password: ${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DatabasePassword }}
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      ##- name: Build and analyze
      ##  env:
      ##    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      ##    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      ##  run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Dragon-King-Industries_ocpp

      
      
    

      ##- name: Mysql server
      ##  uses: actions/checkout@v3
      ##  uses: shogo82148/actions-setup-mysql@v1
      ##  with:
      ##    mysql-version: '8.0'
      ##  run: mysql -uroot -h127.0.0.1 -e 'SELECT version()'